<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>hax</title>
    <link>https://hacspec.github.io/blog/</link>
    <description>Recent content on hax</description>
    <image>
      <title>hax</title>
      <url>https://hacspec.github.io/blog/papermod-cover.png</url>
      <link>https://hacspec.github.io/blog/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 03 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://hacspec.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>This month in hax: November 2024</title>
      <link>https://hacspec.github.io/blog/posts/this-month-in-hax/2024-11/</link>
      <pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>https://hacspec.github.io/blog/posts/this-month-in-hax/2024-11/</guid>
      <description>Despite some team members attending an offsite work week event, we merged 24 PRs this month. Here&amp;rsquo;s an overview of the work of the month.
The frontend remained stable this month, with only a few pull requests focused on small improvements and bug fixes. Our CI now tests the extraction of Rust by Example.
cmester0 is working on an annotated core library, which is extractable via hax to multiple backends. The Coq backend now uses this generated core library, and ships with an example.</description>
    </item>
    
    <item>
      <title>This month in hax: October 2024</title>
      <link>https://hacspec.github.io/blog/posts/this-month-in-hax/2024-10/</link>
      <pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>https://hacspec.github.io/blog/posts/this-month-in-hax/2024-10/</guid>
      <description>In October, we merged 70 PRs! ðŸŽ‰
Thanks to a huge work from Nadrieril on trait resolution, the goal of handling all valid Rust code with hax frontend is now almost achieved. With these improvements and some bugfixes from W95Psp, we now produce JSON without errors for more than 99% of Rust&amp;rsquo;s top 800 crates!
W95Psp worked on a new data representation for communication between the frontend and the engine. This removes redundancy and gives great performance gains.</description>
    </item>
    
    <item>
      <title>This month in hax: September 2024</title>
      <link>https://hacspec.github.io/blog/posts/this-month-in-hax/2024-09/</link>
      <pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>https://hacspec.github.io/blog/posts/this-month-in-hax/2024-09/</guid>
      <description>In July, we merged 33 PRs! ðŸŽ‰
On the side of the frontend, Nadrieril and I worked at making hax handling of binders (e.g. &#39;a in for&amp;lt;&#39;a&amp;gt; &amp;amp;&#39;a T: PartialEq&amp;lt;i32&amp;gt;) and traits better. This is not finished yet, but we made great progress. Our goal is to make the frontend work on every valid Rust code.
In the engine, thanks to paulmure, we now are able to process unsafe blocks. Thanks to maximebuyse, the engine can now rewrite more return expressions: we are now planning on supporting return inside loops, along with break and continue.</description>
    </item>
    
    <item>
      <title>This month in hax: July 2024</title>
      <link>https://hacspec.github.io/blog/posts/this-month-in-hax/2024-07/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://hacspec.github.io/blog/posts/this-month-in-hax/2024-07/</guid>
      <description>In July, we merged 32 PRs! ðŸŽ‰
On the side of the frontend and CLI, we had a lot of fixes and improvements! The hax command line and rustc driver were refactored, allowing for better scaling and caching. We also improved the general ergonomics: diagnostics can now be output in JSON, we have improved error messages&amp;hellip; And we pushed various bug fixes.
In the engine, we now resugar asserts properly and support dyn.</description>
    </item>
    
    <item>
      <title>This month in hax: June 2024</title>
      <link>https://hacspec.github.io/blog/posts/this-month-in-hax/2024-06/</link>
      <pubDate>Tue, 02 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://hacspec.github.io/blog/posts/this-month-in-hax/2024-06/</guid>
      <description>This first blog post inaugurates our series named &amp;ldquo;This Month in hax&amp;rdquo;: a series of short highlights of what happened in the development of hax and it&amp;rsquo;s ecosystem in the month.
In June, 23 PRs have been merged ðŸŽ‰! The detail is available below.
On the Rust side, we have updated the Rust compiler to a very recent nightly thanks to @Nadrieril! We also added support for more Rust features in the frontend (dyn Trait), more disciminant informations on ADTs, fixed various bugs, and improved the general experience of using hax.</description>
    </item>
    
    <item>
      <title>Announcing the hax tutorial</title>
      <link>https://hacspec.github.io/blog/posts/announcement-tutorial/</link>
      <pubDate>Mon, 13 May 2024 00:00:00 +0000</pubDate>
      
      <guid>https://hacspec.github.io/blog/posts/announcement-tutorial/</guid>
      <description>We wrote a tutorial for hax!</description>
    </item>
    
    <item>
      <title>Introducing hax ðŸŽ‚</title>
      <link>https://hacspec.github.io/blog/posts/hax-v0-1/</link>
      <pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://hacspec.github.io/blog/posts/hax-v0-1/</guid>
      <description>We are excited to announce the first release of hax</description>
    </item>
    
    
    
  </channel>
</rss>
